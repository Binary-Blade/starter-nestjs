events {}

http {
  # Configure limit requests 10 per minute
  # Rate limiting
  limit_req_zone $binary_remote_addr zone=mylimit:10m rate=10r/m;

  # Server block for HTTP (currently active)
  server {
    listen 80;
    # server_name your_domain.com;  # <-- Change this to your actual domain when you have one

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    # Below header is for HTTPS, comment it out for now
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; object-src 'none';" always;
    
    # Disable server tokens
    server_tokens off;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Access and error logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    location / {
      proxy_pass http://dev:3000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_cache_bypass $http_upgrade;

      # Rate limiting
      limit_req zone=mylimit burst=5 nodelay;
    }
  }

  # =============================================================================================
  # ================ Server block for HTTPS (commented out, to be enabled later) ================

  #server {
  #  listen 443 ssl http2;
  #  server_name your_domain.com;  # <-- Change this to your actual domain when you have one
    
  #  # SSL configuration
  #  ssl_certificate /path/to/your/certificate.pem; # SSL certificate
  #  ssl_certificate_key /path/to/your/private.key; # SSL private key
  #  ssl_protocols TLSv1.2 TLSv1.3;
  #  ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
  #  ssl_prefer_server_ciphers on;
    
  #  # Enable HSTS once HTTPS is configured
  #  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

  #  # Same security headers as in the HTTP block
  #  add_header X-Frame-Options "SAMEORIGIN" always;
  #  add_header X-Content-Type-Options "nosniff" always;
  #  add_header X-XSS-Protection "1; mode=block" always;
  #  add_header Content-Security-Policy "default-src 'self'; script-src 'self'; object-src 'none';" always;
    
  #  # Disable server tokens
  #  server_tokens off;

  #  # Compression
  #  gzip on;
  #  gzip_vary on;
  #  gzip_proxied any;
  #  gzip_comp_level 6;
  #  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  #  # Access and error logs
  #  access_log /var/log/nginx/access.log;
  #  error_log /var/log/nginx/error.log;

  #  location / {
  #    proxy_pass http://dev:3000;
  #    proxy_http_version 1.1;
  #    proxy_set_header Upgrade $http_upgrade;
  #    proxy_set_header Connection "upgrade";
  #    proxy_set_header Host $host;
  #    proxy_cache_bypass $http_upgrade;

  #    # Rate limiting
  #    limit_req zone=mylimit burst=5 nodelay;
  #  }
  #}
}

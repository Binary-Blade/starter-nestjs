version: '3.9'

services:
# DATABASE - POSTGRESQL
# Setup the PostgreSQL database service
  postgres:
    container_name: db-postgres
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME} 
    restart: always
    ports:
      - 5432:5432
    volumes:
      - pg-data:/var/lib/postgresql/data 
    networks:
      - app

# REDIS - CACHE
# Setup the Redis cache service.
  redis:
    container_name: redis-cache
    image: redis:alpine
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    ports:
      - "6379:6379" 
    networks:
      - app
    volumes:
      - redis-data:/data

# API GATEWAY - NGINX
# Setup the Nginx service.
  nginx:
    container_name: nginx-gateway
    image: nginx:alpine
    ports:
      - "80:80" 
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro 
    depends_on:
      - dev
    networks:
      - app

# SERVER - NESTJS
# Setup the NestJS server service.
  dev:
    container_name: nestjs-server
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    working_dir: /app
    networks:
      - app 
    ports:
      - 3000:3000
    depends_on:
      - postgres 
    command: [sh, -c, 'pnpm run start:dev']
    volumes:
      - .:/app:delegated

networks: 
  app:

volumes:
  pg-data:  # PERSISTENT VOLUME : db-postgres 
  redis-data: # PERSISTENT VOLUME : redis-cache 
